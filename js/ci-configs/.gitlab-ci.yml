image: node:8

# Cache dependencies.
cache:
  paths:
    - node_modules/

stages:
  - verify
  - deploy

# Define jobs under the same stage to run them in parallel.
test:
  stage: verify
  script:
    - yarn install
    - yarn test

  # https://gitlab.com/gitlab-org/gitlab-ce/issues/29642
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

lint:
  stage: verify
  script:
    - yarn install
    - yarn lint

apiary-validate:
  stage: verify
  script:
      - yarn install
      - yarn validate:api-doc

code-quality:
  stage: verify
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

heroku-deploy:
  stage: deploy
  image: ruby:latest
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  only:
    refs:
      - master
    variables:
      - $HEROKU_APP_NAME
      - $HEROKU_API_KEY

gl-pages-deploy:
  stage: deploy
  script:
    - yarn run build
    # https://docs.gitlab.com/ee/user/project/pages/getting_started_part_four.html#the-public-directory
    # Move the built folder into `public`.
    - mv <build-folder> public
    - cd public && touch .nojekyll
  artifacts:
    paths:
    - public 
  only:
    refs:
      - master
    variables:
      - $DEPLOY_TO_GL_PAGES

apiary-deploy:
  stage: deploy
  image: ruby:2.3
  before_script:
    - gem install apiaryio
  script:
    - apiary publish --path="<path-to-apib>" --api-name=$APIARY_SUB_DOMAIN
  only:
    refs:
      - master
  variables:
    - $APIARY_API_KEY
